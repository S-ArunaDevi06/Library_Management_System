/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package  com.mycompany.library_project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abira
 */
public class fines extends javax.swing.JFrame {
    Connection con;
    Statement st;
    PreparedStatement ps;
    ResultSet rs;
    /**
     * Creates new form fines
     */
    public fines() {
        initComponents();
        
        try{
Class.forName("oracle.jdbc.OracleDriver");
//JOptionPane.showMessageDialog(this,"Driver Loaded!");
try {
con = DriverManager.getConnection("jdbc:oracle:thin:@ArunaDevi:1522:orcl","scott","anssggah");
//JOptionPane.showMessageDialog(this,"Connected to Oracle database!");
}
catch (SQLException ex) {
Logger.getLogger(fines.class.getName()).log(Level.SEVERE,null, ex);
JOptionPane.showMessageDialog(this,ex.getMessage());
}

 
}
catch(ClassNotFoundException ex){
Logger.getLogger(fines.class.getName()).log(Level.SEVERE,null, ex);
JOptionPane.showMessageDialog(this,ex.getMessage());

}
        //fines_Load();
        
    }
    
    public void fines_Load()
    {
       try {
           int b;
           ps=con.prepareStatement("select * from fines");
           rs=ps.executeQuery();
           
           ResultSetMetaData rsd=rs.getMetaData();
           b=rsd.getColumnCount();
           DefaultTableModel d=(DefaultTableModel)fines_table.getModel();
           d.setRowCount(0);
           
           while(rs.next())
           {
               Vector v2 = new Vector();
               
               for(int i=1;i<=b;i++)
               {
                   v2.add(rs.getString("user_id"));
                   v2.add(rs.getString("book_id"));
                   v2.add(rs.getString("renewal_count"));
                   v2.add(rs.getString("due_amount"));
                   v2.add(rs.getString("paid_status"));
                   
               }
               d.addRow(v2);
           }
       } catch (SQLException ex) {
           Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
       }
       
       
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fines_user_id = new javax.swing.JTextField();
        fines_book_id = new javax.swing.JTextField();
        fines_renewal_count = new javax.swing.JTextField();
        fines_due_amount = new javax.swing.JTextField();
        fines_paid_status = new javax.swing.JTextField();
        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fines_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        fines_pay_fine = new javax.swing.JButton();
        renew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("FINES");

        jLabel2.setText("USER ID");

        jLabel3.setText("BOOK ID");

        jLabel4.setText("RENEWAL COUNT");

        jLabel5.setText("DUE AMOUNT");

        jLabel6.setText("PAID STATUS");

        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        fines_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USER ID", "BOOK ID", "REN_COUNT", "DUE_AMT", "PAID_STATS"
            }
        ));
        fines_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fines_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fines_table);

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        fines_pay_fine.setText("PAY FINE");
        fines_pay_fine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fines_pay_fineActionPerformed(evt);
            }
        });

        renew.setText("RENEW");
        renew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fines_paid_status, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fines_due_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fines_book_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(124, 124, 124)
                                .addComponent(fines_user_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton1)
                                        .addComponent(jLabel4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(renew)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exit)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fines_renewal_count, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(fines_pay_fine)
                                            .addGap(14, 14, 14))))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(fines_user_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addComponent(fines_book_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fines_renewal_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fines_due_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fines_paid_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(fines_pay_fine))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exit)
                            .addComponent(renew))
                        .addGap(18, 18, 18)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        MainForm m=new MainForm();
            this.hide();
            m.setVisible(true);
    }//GEN-LAST:event_exitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
        // Step 1: Call the stored procedure to calculate fines
        String sql = "CALL calculate_fines(?)";
        ps = con.prepareStatement(sql);
        ps.setString(1, fines_user_id.getText());
        ps.executeUpdate();
        
        // Notify the user that the fines have been updated
        

        // Step 2: Retrieve the calculated fines
        sql = "SELECT book_id, due_amount, renewal_count FROM fines WHERE user_id = ? AND paid_status = 'not paid'";
        ps = con.prepareStatement(sql);
        ps.setString(1, fines_user_id.getText());
        rs = ps.executeQuery();
        
        // Step 3: Display the results in the text field
        StringBuilder finesInfo = new StringBuilder();
        while (rs.next()) {
            String bookId = rs.getString("book_id");
            double dueAmount = rs.getDouble("due_amount");
            int renewalCount = rs.getInt("renewal_count");
            finesInfo.append("Book ID: ").append(bookId)
                     .append(", Due Amount: ").append(dueAmount)
                     .append(", Renewal Count: ").append(renewalCount).append("\n");
        }

        // Set the text directly in the JTextArea or JTextField
        //fines_due_amount.setText(finesInfo.toString());

    } catch (SQLException ex) {
        Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    } 
            
        
        int c;
        DefaultTableModel d1=(DefaultTableModel)fines_table.getModel();
        int selectIndex = fines_table.getSelectedRow();
        
        String user_id=fines_user_id.getText();
        try{
            ps=con.prepareStatement("select * from fines where user_id=?");
            ps.setString(1, user_id);
            rs=ps.executeQuery();
            
            ResultSetMetaData rsd=rs.getMetaData();
            c=rsd.getColumnCount();
            
            DefaultTableModel d=(DefaultTableModel)fines_table.getModel();
            d.setRowCount(0);
            
            
            while (rs.next())
            {
                Vector v2=new Vector();
                
                for (int i=0;i<=c;i++)
                {
                    v2.add(rs.getString("user_id"));
                    v2.add(rs.getString("book_id"));
                    v2.add(rs.getString("renewal_count"));
                    v2.add(rs.getString("due_amount"));
                    v2.add(rs.getString("paid_status"));
                }
                
                d.addRow(v2);
            }
            
        }
        catch(SQLException ex)
        {
             Logger.getLogger(User.class.getName()).log(Level.SEVERE,null, ex);
             JOptionPane.showMessageDialog(this,ex.getMessage());
        }          
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void fines_pay_fineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fines_pay_fineActionPerformed
 try {
        // Call the stored procedure to pay fines
        String sql = "CALL pay_fines(?, ?)";
        ps = con.prepareStatement(sql);
        ps.setString(1, fines_user_id.getText());
        ps.setString(2, fines_book_id.getText());
        ps.executeUpdate();
        
        // Notify the user that the fine has been paid
        JOptionPane.showMessageDialog(this, "Fine for Book ID " + fines_book_id.getText()+ " has been paid!");
    } catch (SQLException ex) {
        Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    } finally {
        // Close the resources
        try {
            if (ps != null) ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    /*try {
        // Step 1: Call the stored procedure to calculate fines
        String sql = "call calculate_fines(?)";
        ps = con.prepareStatement(sql);
        ps.setString(1, fines_user_id.getText());
        int k=ps.executeUpdate();
        
        
            JOptionPane.showMessageDialog(this, "Fines Updated!");
        
        
        // Notify the user that the fines have been updated
        
        

        // Step 2: Retrieve the calculated fines
        sql = "SELECT book_id, due_amount FROM fines WHERE user_id = ? AND paid_status = 'not paid'";
        ps = con.prepareStatement(sql);
        ps.setString(1, fines_user_id.getText());
        rs = ps.executeQuery();
        
        // Step 3: Display the results in the text field
        StringBuilder finesInfo = new StringBuilder();
        while (rs.next()) {
            String bookId = rs.getString("book_id");
            double dueAmount = rs.getDouble("due_amount");
            finesInfo.append("Book ID: ").append(bookId)
                     .append(", Due Amount: ").append(dueAmount).append("\n");
            
        }

        // Ensure this runs on the Event Dispatch Thread
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                fines_due_amount.setText(finesInfo.toString());
            }
        });

    } catch (SQLException ex) {
        Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, ex.getMessage());
    } finally {
        // Close the resources
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
    
    
    
      
    }//GEN-LAST:event_fines_pay_fineActionPerformed

    private void renewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renewActionPerformed
        // TODO add your handling code here:
        
        try {
            String sq="call renew_count(?,?)";
            ps = con.prepareStatement(sq);
            ps.setString(1, fines_user_id.getText());
            ps.setString(2,fines_book_id.getText());
            ps.execute();
            JOptionPane.showMessageDialog(this, "Renewed!");
        } catch (SQLException ex) {
            Logger.getLogger(fines.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_renewActionPerformed
/*
    private void fines_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fines_tableMouseClicked
             // TODO add your handling code here:
    }//GEN-LAST:event_fines_tableMouseClicked
*/
    
    private void fines_tableMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
     DefaultTableModel d1=(DefaultTableModel)fines_table.getModel();
        int selectIndex = fines_table.getSelectedRow();
        
        String user_id=d1.getValueAt(selectIndex,0).toString();
        fines_user_id.setText(user_id);
        fines_book_id.setText(d1.getValueAt(selectIndex,1).toString());
        fines_renewal_count.setText(d1.getValueAt(selectIndex,2).toString());
        fines_due_amount.setText(d1.getValueAt(selectIndex,3).toString());
        fines_paid_status.setText(d1.getValueAt(selectIndex,4).toString());
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JTextField fines_book_id;
    private javax.swing.JTextField fines_due_amount;
    private javax.swing.JTextField fines_paid_status;
    private javax.swing.JButton fines_pay_fine;
    private javax.swing.JTextField fines_renewal_count;
    private javax.swing.JTable fines_table;
    private javax.swing.JTextField fines_user_id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton renew;
    // End of variables declaration//GEN-END:variables
}
